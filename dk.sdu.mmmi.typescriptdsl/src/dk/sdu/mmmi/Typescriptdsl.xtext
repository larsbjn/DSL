grammar dk.sdu.mmmi.Typescriptdsl with org.eclipse.xtext.common.Terminals

generate typescriptdsl "http://www.sdu.dk/mmmi/Typescriptdsl"

Database:
	'database' name=ID
	
	config += Config*
	
	tables += Table+
	
	queries += Query*
;

Config returns Config:
	{ConfigProvider} 'provider' value=STRING | // Database type
	{ConfigUrl} 'url' value=STRING |
	{ConfigPort} 'port' value=INT |
	{ConfigUsername} 'username' value=STRING |
	{ConfigPassword} 'password' value=STRING |
	{ConfigFilePath} 'filepath' value=STRING
;

Table:
	'table' name=ID ('extends' superType=[Table])? ':'
		attributes += Attribute+
;

Attribute:
	name=ID ':' type=AttributeType (optional?='?')? (primary?='primary')? 
		('constraint'  constraint=OrConstraint)?
;

OrConstraint returns Constraint:
	AndConstraint ({Or.left=current} '||' right=AndConstraint)*
;

AndConstraint: 
	PrimaryConstraint ({And.left=current} '&&' right=PrimaryConstraint)*
;

PrimaryConstraint: 		 
 	{RegexConstraint} value=STRING |
 	{CompareConstraint} left=Expression operator=Operators right=Expression
;

Operators: 
	'>' |
	'>=' |
	'<' |
	'<=' |
	'='
;

Expression returns Expression:
	Factor (({Plus.left=current} '+' | {Minus.left=current} '-')  right=Factor)*
;

Factor returns Expression:
	Primary (({Mult.left=current} '*' | {Div.left=current} '/')  right=Primary)*
;

Primary returns Expression:
	NumberExp | Field | Parenthesis
;

Parenthesis:
	'(' exp=Expression ')'
;

Field:
	attr=[Attribute]
;

NumberExp:
	value=INT
;


AttributeType returns AttributeType:
	PrimaryType | TableType
;

PrimaryType returns PrimaryType:
	{IntType} 'int' | {StringType} 'string' | {DateType} 'date' 
;

TableType returns TableType:
	table=[Table]
;

Query:
	'query' name=ID ':' 'from' table=[Table] queryType=QueryType
;

QueryType:
	Select | Delete
;

Select:
	/* Create validation for checking ID = table.attributes */
	/* Check if where statement for less or higher than is on ints attributes */
	'select' (all?='*' | attributes+=[Attribute]+ (',' attributes+=[Attribute])*)
		('where' where=OrConstraint)?
;

Delete:
	'delete' table=[Table]
;
